{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React-Projects\\\\crypto-nerds\\\\src\\\\Components\\\\CoinInfo.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress, createTheme, ThemeProvider } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { HistoricalChart } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport \"./CoinInfo.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Chart } from 'react-chartjs-2';\nimport { chartDays } from '../config/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicalData, setHistoricalData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = CryptoState();\n\n  const fetchHistoricalData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setHistoricalData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricalData();\n  }, [currency, days]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: !historicalData ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"#486DFB\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: historicalData.map(coin => {\n              let date = new Date(coin[0]);\n              let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()}PM` : `${date.getHours()}:${date.getMinutes()}AM`;\n              return days === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: historicalData.map(coin => coin[1]),\n              label: `Price (last ${days} Days) in ${currency}`,\n              borderColor: \"#486DFB\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: chartDays.map()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinInfo, \"IKsiKqaVWTtfffkPDJEJmH3Znhs=\");\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["CircularProgress","createTheme","ThemeProvider","axios","React","useEffect","useState","Line","HistoricalChart","CryptoState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","chartDays","register","CoinInfo","coin","historicalData","setHistoricalData","days","setDays","currency","fetchHistoricalData","data","get","id","prices","darkTheme","palette","primary","main","type","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","elements","point","radius"],"sources":["D:/Projects/React-Projects/crypto-nerds/src/Components/CoinInfo.js"],"sourcesContent":["import { CircularProgress, createTheme, ThemeProvider } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport \"./CoinInfo.css\"\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,} from 'chart.js'\r\nimport { Chart } from 'react-chartjs-2'\r\nimport { chartDays } from '../config/data';\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend)\r\n\r\nconst CoinInfo = ({coin}) => { \r\n  const [historicalData, setHistoricalData] = useState();\r\n  const [days, setDays] = useState(1);\r\n\r\n  const {currency} = CryptoState();\r\n\r\n  const fetchHistoricalData = async () => {\r\n    const {data} = await axios.get(HistoricalChart(coin.id, days, currency));\r\n    setHistoricalData(data.prices);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistoricalData();\r\n  },[currency, days])\r\n    \r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary:{\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n    <div className='container'>\r\n      {\r\n        !historicalData ? (\r\n          <CircularProgress\r\n            style={{color: \"#486DFB\"}}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ):(\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicalData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time = date.getHours() > 12\r\n                  ? `${date.getHours() - 12}:${date.getMinutes()}PM`\r\n                  : `${date.getHours()}:${date.getMinutes()}AM`;\r\n\r\n                  return days===1 ? time : date.toLocaleDateString();               \r\n                  }),\r\n                  datasets : [\r\n                    {\r\n                      data: historicalData.map((coin) => coin[1]),\r\n                     label: `Price (last ${days} Days) in ${currency}`,\r\n                     borderColor:\"#486DFB\",                   \r\n                    },\r\n                  ],\r\n              }}\r\n              options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n            <div>\r\n              {chartDays.map()}\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinInfo"],"mappings":"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"},"metadata":{},"sourceType":"module"}