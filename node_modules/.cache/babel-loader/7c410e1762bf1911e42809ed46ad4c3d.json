{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React-Projects\\\\crypto-nerds\\\\src\\\\CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Children } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = _ref => {\n  _s();\n\n  let {\n    Children\n  } = _ref;\n  const [currency, SetCurrency] = useState(\"INR\");\n  const [symbol, SetSymbol] = useState(\"₹\");\n  useEffect(() => {\n    if (currency === \"INR\") SetSymbol(\"₹\");else if (currency === \"USD\") SetSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    valu: true,\n    children: Children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoContext, \"lVB/brVSSgWZ47G/qe9WKNm+Z7k=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"names":["React","Children","useEffect","useState","useContext","createContext","Crypto","CryptoContext","currency","SetCurrency","symbol","SetSymbol","CryptoState"],"sources":["D:/Projects/React-Projects/crypto-nerds/src/CryptoContext.js"],"sourcesContent":["import React, { Children } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({Children}) => {\r\n\r\n  const [currency, SetCurrency] = useState(\"INR\");\r\n  const [symbol, SetSymbol] = useState(\"₹\");\r\n\r\n  useEffect(() => {\r\n    if (currency===\"INR\") SetSymbol(\"₹\");\r\n    else if(currency === \"USD\") SetSymbol(\"$\");\r\n  },[currency])\r\n\r\n  return (\r\n    <Crypto.Provider valu>\r\n    {Children}\r\n    </Crypto.Provider>\r\n  )\r\n}\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,MAAM,gBAAGD,aAAa,EAA5B;;AAEA,MAAME,aAAa,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACN;EAAD,CAAe;EAEpC,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,GAAD,CAApC;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,KAAG,KAAf,EAAsBG,SAAS,CAAC,GAAD,CAAT,CAAtB,KACK,IAAGH,QAAQ,KAAK,KAAhB,EAAuBG,SAAS,CAAC,GAAD,CAAT;EAC7B,CAHQ,EAGP,CAACH,QAAD,CAHO,CAAT;EAKA,oBACE,QAAC,MAAD,CAAQ,QAAR;IAAiB,IAAI,MAArB;IAAA,UACCP;EADD;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAfD;;GAAMM,a;;KAAAA,a;AAiBN,eAAeA,aAAf;AAEA,OAAO,MAAMK,WAAW,GAAG,MAAM;EAAA;;EAC/B,OAAOR,UAAU,CAACE,MAAD,CAAjB;AACD,CAFM;;IAAMM,W;;MAAAA,W"},"metadata":{},"sourceType":"module"}